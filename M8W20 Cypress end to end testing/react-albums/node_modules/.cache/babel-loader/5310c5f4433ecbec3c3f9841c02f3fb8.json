{"ast":null,"code":"var _jsxFileName = \"/Users/alvinng/LHL-full-time-teaching/webflex-lecture-notes-oct-2022/M8W20 Cypress end to end testing/react-albums/src/components/Results.js\";\nimport React from \"react\";\nimport { getYear } from \"date-fns\";\nimport Album from \"components/Album\";\nexport default function Results(props) {\n  var results = props.results,\n      filters = props.filters;\n  return results.filter(function (album) {\n    if (filters.Explicit === false && album.collectionExplicitness === \"explicit\") {\n      return false;\n    }\n\n    if (filters[\"1900s\"] === false && getYear(new Date(album.releaseDate)) < 2000) {\n      return false;\n    }\n\n    if (filters[\"2000s\"] === false && getYear(new Date(album.releaseDate)) >= 2000) {\n      return false;\n    }\n\n    if (filters.Single === false && (album.trackCount === 1 || album.collectionName.endsWith(\"- Single\"))) {\n      return false;\n    }\n\n    if (filters.EP === false && (album.trackCount >= 4 && album.trackCount <= 6 || album.collectionName.endsWith(\"- EP\"))) {\n      return false;\n    }\n\n    if (album.collectionName.length > 127 || album.artistName.length > 127) {\n      return false;\n    }\n\n    return true;\n  }).map(function (album) {\n    return React.createElement(Album, Object.assign({\n      key: album.collectionId\n    }, album, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  });\n}","map":{"version":3,"sources":["/Users/alvinng/LHL-full-time-teaching/webflex-lecture-notes-oct-2022/M8W20 Cypress end to end testing/react-albums/src/components/Results.js"],"names":["React","getYear","Album","Results","props","results","filters","filter","album","Explicit","collectionExplicitness","Date","releaseDate","Single","trackCount","collectionName","endsWith","EP","length","artistName","map","collectionId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,UAAxB;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,MAC7BC,OAD6B,GACRD,KADQ,CAC7BC,OAD6B;AAAA,MACpBC,OADoB,GACRF,KADQ,CACpBE,OADoB;AAGrC,SAAOD,OAAO,CACXE,MADI,CACG,UAAAC,KAAK,EAAI;AACf,QACEF,OAAO,CAACG,QAAR,KAAqB,KAArB,IACAD,KAAK,CAACE,sBAAN,KAAiC,UAFnC,EAGE;AACA,aAAO,KAAP;AACD;;AAED,QACEJ,OAAO,CAAC,OAAD,CAAP,KAAqB,KAArB,IACAL,OAAO,CAAC,IAAIU,IAAJ,CAASH,KAAK,CAACI,WAAf,CAAD,CAAP,GAAuC,IAFzC,EAGE;AACA,aAAO,KAAP;AACD;;AAED,QACEN,OAAO,CAAC,OAAD,CAAP,KAAqB,KAArB,IACAL,OAAO,CAAC,IAAIU,IAAJ,CAASH,KAAK,CAACI,WAAf,CAAD,CAAP,IAAwC,IAF1C,EAGE;AACA,aAAO,KAAP;AACD;;AAED,QACEN,OAAO,CAACO,MAAR,KAAmB,KAAnB,KACCL,KAAK,CAACM,UAAN,KAAqB,CAArB,IAA0BN,KAAK,CAACO,cAAN,CAAqBC,QAArB,CAA8B,UAA9B,CAD3B,CADF,EAGE;AACA,aAAO,KAAP;AACD;;AAED,QACEV,OAAO,CAACW,EAAR,KAAe,KAAf,KACET,KAAK,CAACM,UAAN,IAAoB,CAApB,IAAyBN,KAAK,CAACM,UAAN,IAAoB,CAA9C,IACCN,KAAK,CAACO,cAAN,CAAqBC,QAArB,CAA8B,MAA9B,CAFF,CADF,EAIE;AACA,aAAO,KAAP;AACD;;AAED,QAAIR,KAAK,CAACO,cAAN,CAAqBG,MAArB,GAA8B,GAA9B,IAAqCV,KAAK,CAACW,UAAN,CAAiBD,MAAjB,GAA0B,GAAnE,EAAwE;AACtE,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD,GA3CI,EA4CJE,GA5CI,CA4CA,UAAAZ,KAAK,EAAI;AACZ,WAAO,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAK,CAACa;AAAlB,OAAoCb,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GA9CI,CAAP;AA+CD","sourcesContent":["import React from \"react\";\nimport { getYear } from \"date-fns\";\n\nimport Album from \"components/Album\";\n\nexport default function Results(props) {\n  const { results, filters } = props;\n\n  return results\n    .filter(album => {\n      if (\n        filters.Explicit === false &&\n        album.collectionExplicitness === \"explicit\"\n      ) {\n        return false;\n      }\n\n      if (\n        filters[\"1900s\"] === false &&\n        getYear(new Date(album.releaseDate)) < 2000\n      ) {\n        return false;\n      }\n\n      if (\n        filters[\"2000s\"] === false &&\n        getYear(new Date(album.releaseDate)) >= 2000\n      ) {\n        return false;\n      }\n\n      if (\n        filters.Single === false &&\n        (album.trackCount === 1 || album.collectionName.endsWith(\"- Single\"))\n      ) {\n        return false;\n      }\n\n      if (\n        filters.EP === false &&\n        ((album.trackCount >= 4 && album.trackCount <= 6) ||\n          album.collectionName.endsWith(\"- EP\"))\n      ) {\n        return false;\n      }\n\n      if (album.collectionName.length > 127 || album.artistName.length > 127) {\n        return false;\n      }\n\n      return true;\n    })\n    .map(album => {\n      return <Album key={album.collectionId} {...album} />;\n    });\n}\n"]},"metadata":{},"sourceType":"module"}